syntax = 'proto2';

package slow_control;

message MessageWrapper {
    enum Type {
        NONE = 0;
        RUN_SETTINGS = 1;
        BP_VARS = 2;
        TM_VARS = 3;
        LOW_LEVEL_CMD = 4;
    }

    // Identifies which field is filled in
    required Type type = 1;

    // One of the following is filled in (corresponds to wrapped message type)
    optional RunSettings run_settings = 2;
    optional BackplaneVariables backplane_variables = 3;
    optional TargetVariables target_variables = 4;
    optional LowLevelCommand command = 5;
}

message RunSettings {
    optional string high_level_command = 1;
    optional string high_level_parameter = 2;
}

message LowLevelCommand {
    optional string command_name = 1;
    optional int32 device = 2;
    optional int32 priority = 3;
    repeated uint32 int_args = 4 [packed=true];
    repeated float float_args = 5 [packed=true];
    repeated string string_args = 6;
}

message BackplaneVariables {
    optional LowLevelCommand command = 1;
    optional int32 n_spi_messages = 2;
    repeated uint32 spi_command = 3 [packed=true];
    repeated uint32 spi_data = 4 [packed=true];
    repeated float voltage = 5 [packed=true];
    repeated float current = 6 [packed=true];
    repeated int32 present = 7 [packed=true];
    repeated int32 trigger_mask = 8 [packed=true];
}

message TargetVariables {
    optional LowLevelCommand command = 1;
}
